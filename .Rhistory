x <- [−262, -265, -256, -267, -270, -272, -272.4, -272.7, -272.8, -272.9]
x <- c(−262, -265, -256, -267, -270, -272, -272.4, -272.7, -272.8, -272.9)
y = c(0.315, 0.202, 0.204 , 0.620, 0.715 , 0.935
, 0.957
, 0.906
, 0.985
, 0.987
)
plot(x, y)
sum ( (x-mean(x))*(y-mean(y))  )
sum ( (x-mean(x))*(x-mean(x))  )
sum ( (x-mean(x))*(y-mean(y))  ) / sum ( (x-mean(x))*(x-mean(x))  )
mean(y) + 0.05282894 * mean(x)
mean(y) - 0.05282894 * mean(x)
mean(x)
mean(y)
sum ( (x-mean(x))*(x-mean(x))  )
1/  sum ( (x-mean(x))*(x-mean(x))  )
sd(y)
sum ( (y-mean(y))*(y-mean(y))  ) - ( sum ( (x-mean(x))*(y-mean(y))  ) / sum ( (x-mean(x))*(x-mean(x))  ) ) * sum ( (x-mean(x))*(y-mean(y))  )
sum( (y - mean(y))^2 )
length(x)
(sum ( (y-mean(y))*(y-mean(y))  ) - ( sum ( (x-mean(x))*(y-mean(y))  ) / sum ( (x-mean(x))*(x-mean(x))  ) ) * sum ( (x-mean(x))*(y-mean(y))  ) ) /8
0.1422518/8
-0.0528 / sqrt( 0.00335*0.0177 )
q()
setwd("C:/Users/ASUS/Documents/Sebastian/ClassificationEmotionModels_ISEAR")
source('~/Sebastian/ClassificationEmotionModels_ISEAR/R code/data_loader.R')
install.packages("gpuR")
source('~/Sebastian/ClassificationEmotionModels_ISEAR/R code/data_loader.R')
install.packages("gpuR")
source('~/Sebastian/ClassificationEmotionModels_ISEAR/R code/data_loader.R')
data <- getPreproc.Data.ISEAR("py_isear_dataset/isear.csv")
data <- getData.ISEAR("py_isear_dataset/isear.csv")
data <- preproccess.data(data)
source('~/Sebastian/ClassificationEmotionModels_ISEAR/R code/data_loader.R')
test <- bag.of.words(data, train = FALSE)
words.dict <- scan("dict.txt", what = character())
source('~/Sebastian/ClassificationEmotionModels_ISEAR/R code/data_loader.R')
test <- bag.of.words(data)
source('~/Sebastian/ClassificationEmotionModels_ISEAR/R code/data_loader.R')
test <- bag.of.words(data)
docs <- Corpus(VectorSource(data$SIT))
words.dict <- list()
#Remove Sparse Terms
dtm <- DocumentTermMatrix(docs)
dtm <- removeSparseTerms(dtm, sparse)
dtm <- removeSparseTerms(dtm, 0.999)
dtm
findFreqTerms(dtm, 20000)
findFreqTerms(dtm, 1)
source('~/Sebastian/ClassificationEmotionModels_ISEAR/R code/data_loader.R')
source('~/Sebastian/ClassificationEmotionModels_ISEAR/R code/data_loader.R')
test <- bag.of.words(data)
source('~/Sebastian/ClassificationEmotionModels_ISEAR/R code/data_loader.R')
test <- bag.of.words(data, tr)
test <- bag.of.words(data, train = FALSE)
source('~/Sebastian/ClassificationEmotionModels_ISEAR/R code/data_loader.R')
test <- bag.of.words(data, train = FALSE)
source('~/Sebastian/ClassificationEmotionModels_ISEAR/R code/data_loader.R')
source('~/Sebastian/ClassificationEmotionModels_ISEAR/R code/data_loader.R')
source('~/Sebastian/ClassificationEmotionModels_ISEAR/R code/data_loader.R')
dataBag <- get.bagOfWords.allPartData("py_isear_dataset/isear.csv")
source('~/Sebastian/ClassificationEmotionModels_ISEAR/R code/data_loader.R')
dataBag <- get.bagOfWords.allPartData("py_isear_dataset/isear.csv")
str(data$SIT)
source('~/Sebastian/ClassificationEmotionModels_ISEAR/R code/data_loader.R')
source('~/Sebastian/ClassificationEmotionModels_ISEAR/R code/data_loader.R')
dataBag <- get.bagOfWords.allPartData("py_isear_dataset/isear.csv")
dataBag <- getPrep.Data("py_isear_dataset/isear.csv")
str(dataBag$SIT)
data <- getPrep.Data("py_isear_dataset/isear.csv")
levels( data$EMOT ) <- list("1" = "joy", "2" = "fear", "3" = "anger", "4" = "sadness", "5" = "disgust", "6" = "shame", "7" = "guilt")
data$EMOT <- as.numeric(data$EMOT)
mat <- bag.of.words(data$SIT, sparse = 0.999)
source('~/Sebastian/ClassificationEmotionModels_ISEAR/R code/data_loader.R')
mat <- bag.of.words(data, sparse = 0.999)
