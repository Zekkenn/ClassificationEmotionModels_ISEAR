res <- 'foo'
switch (res,
foo = {write("holas",stdout())}
)
res <- 'cre'
switch (res,
foo = {write("holas",stdout())}
)
source('~/Universidad/AI/Emotional Clasification/ClassificationEmotionModels_ISEAR/R code/Emotional_classifier.R')
ss.pre <- getPre.complete("../py_isear_dataset/isear.csv","../SemEval_14/AffectiveText.test")
explore.data(ss.pre[[1]]$SIT,ss.pre[[1]]$EMOT)
ss <- getRaw.complete("../py_isear_dataset/isear.csv","../SemEval_14/AffectiveText.test")
isear.words <- DocumentTermMatrix(Corpus(VectorSource(ss[[1]]$SIT)))
str(isear.words)
str(as.data.frame(isear.words))
str(as.matrix(isear.words))
isear.words <- as.matrix(isear.words)
str(ss[[1]])
ss <- getData.ISEAR("../py_isear_dataset/isear.csv")
isear.words <- DocumentTermMatrix(Corpus(VectorSource(ss[[1]]$SIT)))
isear.words <- DocumentTermMatrix(Corpus(VectorSource(ss$SIT)))
isear.words <- as.matrix(isear.words)
str(isear.words)
idf <- log(nrow(isear.words)/colSums(isear.words))
str(idf)
nrow(isear.words)
colSums(isear.words)
rr <- isear.words*idf
str(idf)
str(isear.words)
str(rr)
isear.words[,1]
isear.words[1:5,1]
rr[1:5,1]
isear.words[7666,1]
isear.words[7667,1]
isear.words[7666,1]
rr[7666,1]
rr <- isear.words*t(idf)
rr <- isear.words %*% idf
isear.words[1:5,1]
rr[1:5,1]
rr <- isear.words %*% t(idf)
rr <- t(isear.words) * (idf)
isear.words[1:5,1]
rr[1:5,1]
t(rr[1:5,1])
str(rr)
t(rr)[1:5,1]
rr <- t(t(isear.words) * (idf))
summary(rr)
rs <- rowSums(rr)
str(rr)
str(rs)
summary(ss$EMOT)
str(summary(ss$EMOT))
data.rr <- data.frame(SIT = rowSums(rr), EMOT = ss$EMOT)
str(data.rr)
data.idf <- aggregate(data.rr$SIT, by=list(EMOT=data.rr$EMOT), FUN=sum)
str(data.idf)
as.vector(summary(data.idf))
as.vector(summary(data.idf$x))
as.vector(summary(data.idf$EMOT))
result.idf <- as.vector(summary(data.idf$x))
levels(result.idf) <- levels(data.idf$EMOT)
str(result.idf)
data.idf
result.idf <- as.vector(data.idf$x)
str(result.idf)
levels(result.idf) <- levels(data.idf$EMOT)
str(result.idf)
summary(result.idf)
explore.data(ss$SIT,result.idf)
pc = barplot(result.idf,
width = 1, space = 0.2, border = NA, axes = F,
ylim = c(0, 1.05 * max(result.idf, na.rm = T)),
ylab = "Counts" , cex.names = 0.7,
names.arg = levels(result.idf),
main = "Distribucción de Emociones",
col = emot.colors(length(levels(result.idf))))
pc = barplot(as.vector(result.idf),
width = 1, space = 0.2, border = NA, axes = F,
ylim = c(0, 1.05 * max(as.vector(result.idf), na.rm = T)),
ylab = "Counts" , cex.names = 0.7,
names.arg = levels(result.idf),
main = "Distribucción de Emociones",
col = emot.colors(length(levels(result.idf))))
freq <- round(as.vector(result.idf) / sum(as.vector(result.idf)), 3)
cum_freq <- cumsum(freq)
# New margins
def_par <- par()
par(mar=c(5,5,4,5))
pc = barplot(as.vector(result.idf),
width = 1, space = 0.2, border = NA, axes = F,
ylim = c(0, 1.05 * max(as.vector(result.idf), na.rm = T)),
ylab = "Counts" , cex.names = 0.7,
names.arg = levels(result.idf),
main = "Distribucción de Emociones",
col = emot.colors(length(levels(result.idf))))
# anotate left axis
axis(side = 2, at = c(0, as.vector(summary(emots))), las = 1, col.axis = "grey62", col = "grey62", tick = T, cex.axis = 0.8)
# frame plot
box( col = "grey62")
freq <- round(as.vector(result.idf) / sum(as.vector(result.idf)), 3)
cum_freq <- cumsum(freq)
# New margins
def_par <- par()
par(mar=c(5,5,4,5))
pc = barplot(as.vector(result.idf),
width = 1, space = 0.2, border = NA, axes = F,
ylim = c(0, 1.05 * max(as.vector(result.idf), na.rm = T)),
ylab = "Inverse Document Frecuency" , cex.names = 0.7,
names.arg = levels(result.idf),
main = "Distribucción de Emociones",
col = emot.colors(length(levels(result.idf))))
# anotate left axis
axis(side = 2, at = c(0, as.vector(result.idf)), las = 1, col.axis = "grey62", col = "grey62", tick = T, cex.axis = 0.8)
# frame plot
box( col = "grey62")
# Cumulative Frequency Lines
px <- cum_freq * max(as.vector(result.idf), na.rm = T)
lines(pc, px, type = "b", cex = 0.7, pch = 19, col="cyan4")
# Annotate Right Axis
axis(side = 4, at = c(0, px), labels = paste(c(0, round(cum_freq * 100)) ,"%",sep=""),
las = 1, col.axis = "grey62", col = "cyan4", cex.axis = 0.8, col.axis = "cyan4")
# restoring default paramenter
par(def_par)
data.idf
# anotate left axis
axis(side = 1, at = c(0, as.vector(result.idf)), las = 1, col.axis = "grey62", col = "grey62", tick = T, cex.axis = 0.8)
# New margins
def_par <- par()
par(mar=c(5,5,4,5))
pc = barplot(as.vector(result.idf),
width = 1, space = 0.2, border = NA, axes = F,
ylim = c(0, 1.05 * max(as.vector(result.idf), na.rm = T)),
ylab = "Inverse Document Frecuency" , cex.names = 0.7,
names.arg = levels(result.idf),
main = "Distribucción de Emociones",
col = emot.colors(length(levels(result.idf))))
# anotate left axis
axis(side = 1, at = c(0, as.vector(result.idf)), las = 1, col.axis = "grey62", col = "grey62", tick = T, cex.axis = 0.8)
# frame plot
box( col = "grey62")
# Cumulative Frequency Lines
px <- cum_freq * max(as.vector(result.idf), na.rm = T)
lines(pc, px, type = "b", cex = 0.7, pch = 19, col="cyan4")
# Annotate Right Axis
axis(side = 4, at = c(0, px), labels = paste(c(0, round(cum_freq * 100)) ,"%",sep=""),
las = 1, col.axis = "grey62", col = "cyan4", cex.axis = 0.8, col.axis = "cyan4")
# restoring default paramenter
par(def_par)
# anotate left axis
axis(side = 2, at = c(0, as.vector(result.idf)), las = 1, col.axis = "grey62", col = "grey62", tick = T, cex.axis = 0.6)
# New margins
def_par <- par()
par(mar=c(5,5,4,5))
pc = barplot(as.vector(result.idf),
width = 1, space = 0.2, border = NA, axes = F,
ylim = c(0, 1.05 * max(as.vector(result.idf), na.rm = T)),
ylab = "Inverse Document Frecuency" , cex.names = 0.7,
names.arg = levels(result.idf),
main = "Distribucción de Emociones",
col = emot.colors(length(levels(result.idf))))
# anotate left axis
axis(side = 2, at = c(0, as.vector(result.idf)), las = 1, col.axis = "grey62", col = "grey62", tick = T, cex.axis = 0.6)
# New margins
def_par <- par()
par(mar=c(5,5,4,5))
pc = barplot(as.vector(result.idf),
width = 1, space = 0.2, border = NA, axes = F,
ylim = c(0, 1.05 * max(as.vector(result.idf), na.rm = T)),
ylab = "Inverse Document Frecuency" , cex.names = 0.7,
names.arg = levels(result.idf),
main = "Distribucción de Emociones",
col = emot.colors(length(levels(result.idf))))
# anotate left axis
axis(side = 2, at = c(0, as.vector(result.idf)), las = 2, col.axis = "grey62", col = "grey62", tick = T, cex.axis = 0.8)
visualize.idf <- function(sentences,emotions){
data.words <- DocumentTermMatrix(Corpus(VectorSource(sentences)))
data.words <- as.matrix(data.words)
idf <- log(nrow(data.words)/colSums(data.words))
rr <- t(t(isear.words) * (idf))
data.rr <- data.frame(SIT = rowSums(rr), EMOT = emotions)
data.idf <- aggregate(data.rr$SIT, by=list(EMOT=data.rr$EMOT), FUN=sum)
result.idf <- as.vector(data.idf$x)
levels(result.idf) <- levels(data.idf$EMOT)
freq <- round(as.vector(result.idf) / sum(as.vector(result.idf)), 3)
cum_freq <- cumsum(freq)
# New margins
def_par <- par()
par(mar=c(5,5,4,5))
pc = barplot(as.vector(result.idf),
width = 1, space = 0.2, border = NA, axes = F,
ylim = c(0, 1.05 * max(as.vector(result.idf), na.rm = T)),
ylab = "Inverse Document Frecuency" , cex.names = 0.7,
names.arg = levels(result.idf),
main = "Frecuencia de Ocurrencia de Palabras en Emociones",
col = emot.colors(length(levels(result.idf))))
# anotate left axis
axis(side = 2, at = c(0, as.vector(result.idf)), las = 1, col.axis = "grey62", col = "grey62", tick = T, cex.axis = 0.8)
# frame plot
box( col = "grey62")
# Cumulative Frequency Lines
px <- cum_freq * max(as.vector(result.idf), na.rm = T)
lines(pc, px, type = "b", cex = 0.7, pch = 19, col="cyan4")
# Annotate Right Axis
axis(side = 4, at = c(0, px), labels = paste(c(0, round(cum_freq * 100)) ,"%",sep=""),
las = 1, col.axis = "grey62", col = "cyan4", cex.axis = 0.8, col.axis = "cyan4")
# restoring default paramenter
par(def_par)
}
# GENERAL DATA EXPLORATION
#   sentences: chr vector with speeches
#   emotions: factor with emotion label for every sentence
explore.data <- function(sentences,emotions){
#COMMON PALETTE
emot.palette <- emot.colors(length(levels(emotions)))
if (length(levels(emotions))){emot.palette <- emot.colors.semeval()}
# EMOTION FRECUENCIES
visualize_data(emotions,emot.palette)
visualize.idf(sentences,emotions)
# ANALYSIS OF WORDS ON SENTENCES
write("WORDS ON SENTENCES",stdout())
words <- tokenize_words(sentences)
visualize.nwords(words,emotions,emot.palette,"words")
# ANALYSIS OF PHRASES ON SENTENCES
write("PHRASES ON SENTENCES",stdout())
phrases <- tokenize_sentences(sentences)
visualize.nwords(phrases,emotions,emot.palette,"phrases")
# WORDCLOUD
generate.wordcloud(sentences,emotions,emot.palette)
}
explore.data(ss$SIT,ss$EMOT)
source('~/Universidad/AI/Emotional Clasification/ClassificationEmotionModels_ISEAR/R code/data_exploration.R')
explore.data(ss$SIT,ss$EMOT)
